{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","changeInput","event","target","value","preventDefault","className","s","contactForm","htmlFor","contactForm__label","type","contactForm__input","onChange","pattern","title","required","ContactList","contacts","onDeleteContact","contactList","map","item","key","id","contactList__item","onClick","Filter","onChangeInput","App","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","normilizedFilter","toLowerCase","visibleContacts","contact","includes","find","alert","uuidv4","newContact","currentTarget","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b5892294.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const changeInput = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ name: name, number: number });\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.contactForm}>\n      <label htmlFor=\"name\" className={s.contactForm__label}>\n        Name\n        <br />\n        <input\n          type=\"text\"\n          className={s.contactForm__input}\n          name=\"name\"\n          value={name}\n          onChange={changeInput}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <br />\n      <label htmlFor=\"number\" className={s.contactForm__label}>\n        Number\n        <br />\n        <input\n          type=\"tel\"\n          className={s.contactForm__input}\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          onChange={changeInput}\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <br />\n      <button type=\"submit\">AddContact</button>\n    </form>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(item => (\n        <li key={item.id} className={s.contactList__item}>\n          {item.name}: {item.number}\n          <button type=\"button\" onClick={() => onDeleteContact(item.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  array: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChangeInput }) => {\n  return (\n    <label htmlFor=\"filter\">\n      <h2>Filter contact by name</h2>\n      <input name=\"filter\" onChange={onChangeInput} value={value} />\n    </label>\n  );\n};\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeInput: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React, { useState, useEffect } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const createContact = ({ name, number }) => {\n    const isContactExist = contacts.find(contact => contact.name === name);\n    if (isContactExist) {\n      alert(`${name} is already exist in contacts`);\n      return;\n    }\n    const id = uuidv4();\n    const newContact = {\n      name,\n      number,\n      id: id,\n    };\n    setContacts(state => [...state, newContact]);\n  };\n\n  const changeАFilterInput = event => {\n    setFilter(event.currentTarget.value.toLowerCase());\n  };\n  const normilizedFilter = filter.toLowerCase();\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normilizedFilter),\n  );\n\n  const deleteContact = id => {\n    setContacts(state => state.filter(contact => contact.id !== id));\n  };\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={createContact} />\n      <div>\n        <h1>Contacts</h1>\n        <Filter value={filter} onChangeInput={changeАFilterInput} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={deleteContact}\n        />\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__xfMyJ\",\"contactForm__label\":\"ContactForm_contactForm__label__odLh8\",\"contactForm__input\":\"ContactForm_contactForm__input__20JlK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList__item\":\"ContactList_contactList__item__35Y-W\"};"],"sourceRoot":""}